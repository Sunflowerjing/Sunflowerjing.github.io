(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{318:function(n,e,s){"use strict";s.r(e);var t=s(0),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"php基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php基础"}},[n._v("#")]),n._v(" PHP基础")]),n._v(" "),s("ol",[s("li",[n._v("PHP 是块级作用域。")]),n._v(" "),s("li",[n._v("\n<?php 这里写 PHP 代码哦 ?>\n")]),n._v(" "),s("li",[n._v("PHP 的变量声明用 $")]),n._v(" "),s("li",[n._v("echo '输出'")]),n._v(" "),s("li",[n._v("判断变量是否被声明了，"),s("code",[n._v("isset()")]),n._v("。例如：isset($a)。即变量定义了，才可以使用。")]),n._v(" "),s("li",[n._v("函数中要使用外部的变量，则需要在函数中用"),s("code",[n._v("global")]),n._v("。例如：global $a;")]),n._v(" "),s("li",[n._v("引入外部文件："),s("code",[n._v("require_once")]),n._v(", "),s("code",[n._v("include_once")]),n._v("。区别："),s("code",[n._v("include_once")]),n._v("有错误也要执行。")]),n._v(" "),s("li",[n._v("关联数组："),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("$arrayTest = array('0' => '苹果', '1' => '橘子');\n$arrayTest[0];\n")])])])]),n._v(" "),s("li",[s("strong",[n._v("session")]),n._v(" 会话机制：浏览器不关闭情况下，在一个 PHP 页面注入 session，就可以在另一个页面获取到session。"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 注入 session\nsession_start();\n$_SESSION['views']=1;\n\n\n// 获取 session\nsession_start();\necho $_SESSION['views'];\n")])])])]),n._v(" "),s("li",[n._v("提交表单的简单形式："),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<form action='b.php' method='get'>\n    <label>用户名</label>\n    <input type='text' name='username' />\n    <label>密码</label>\n    <input type='text' name='password' />\n    <input type='submit' value='提交'/>\n</form>\n\n// 接受提交过来的数据\n$_GET['username'];\n")])])])]),n._v(" "),s("li",[n._v("Ajax 请求"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("$.ajax({\n    url: 'a.php',\n    data: {\n        username: $('#username').val()\n    },\n    dataType: 'json',\n    type: 'get',\n    success: function(data){\n        alert(data)\n    },\n    error: function(){\n        alert('登录失败')\n    }\n})\n")])])])]),n._v(" "),s("li",[n._v("PHP 操作数据库"),s("code",[n._v("增删改查")]),n._v(" 的小Demo"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<?php\n    // 向客户端发送原始的 HTTP 报头\n    header(\"Content-type:application/json; charset=utf-8\"); \n    $servername = \"127.0.0.1\";  // 本地服务地址\n    $username = \"root\";         // 用户名\n    $password = \"123456\";       // 密码\n    $dbname = \"PHPTest\";        // 数据库名\n    \n    // 创建连接\n    $conn = mysqli_connect($servername, $username, $password, $dbname);\n\n    // 检测连接\n    if (!$conn) {\n        die(\"Connection failed: \" . mysqli_connect_error());\n    }\n\n    // 设置编码，防止中文乱码\n    mysqli_query($conn , \"set names utf8\"); \n\n    // 插入数据\n    // $sql = \"INSERT INTO `news`( `newstitle`, `newimg`, `newcontent`) VALUES ('标题2222', '图片2222', '内容222222')\";\n   \n    // 删除数据\n    // $sql = \"DELETE FROM `news` WHERE `newsid`=4\";\n\n    // 更新数据\n    // $sql = \"UPDATE `news` SET `newstitle`= '更改 title',`newcontent`= '更改内容' WHERE `newsid`=5\";\n\n    // 获取前端传给服务端的数据\n    $newstitle = $_REQUEST['newstitle'];\n    $newimg = $_REQUEST['newimg'];\n    $newcontent = $_REQUEST['newcontent'];\n    $addtime = $_REQUEST['addtime'];\n    // $sql = \"INSERT INTO `news`( `newstitle`, `newimg`, `newcontent`, `addtime`) VALUES ('$newstitle', '$newimg', '$newcontent', '$addtime')\";\n    \n    // 查询数据\n    $sql = \"SELECT * FROM news\";\n\n    // 执行 SQL 语句\n    $result = mysqli_query($conn, $sql);\n\n    // 创建空数组\n    $arr=array();\n    \n    // 关联数组 mysqli_fetch_assoc()\n    while($row = mysqli_fetch_assoc($result)) {\n        // 像数组中添加数据\n        array_push($arr,array('newstitle'=>$row['newstitle'], 'newimg'=>$row['newimg']));\n    }\n    $res = array('errcode'=>0, 'result'=>$arr);\n    echo json_encode($res);\n?>\n")])])]),s("ul",[s("li",[s("code",[n._v("$_GET")]),n._v(" 变量接受所有以 get 方式发送的请求")]),n._v(" "),s("li",[s("code",[n._v("$_POST")]),n._v(" 变量接受所有以 post 方式发送的请求")]),n._v(" "),s("li",[s("code",[n._v("$_REQUEST")]),n._v(" 支持两种方式发送过来的请求")])])])]),n._v(" "),s("h2",{attrs:{id:"php-pdo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-pdo"}},[n._v("#")]),n._v(" PHP PDO")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<?php\n    $dbms='mysql';     //数据库类型\n    $host='localhost'; //数据库主机名\n    $dbName='PHPTest';    //使用的数据库\n    $user='root';      //数据库连接用户名\n    $pass='';          //对应的密码\n\n    $dsn=\"$dbms:host=$host;dbname=$dbName\";\n\n    try{\n        $dbh = new PDO($dsn, $user, $pass); //初始化一个PDO对象,连接到 MySQL\n        echo \"连接成功<br/>\";\n        // 进行一次搜索操作\n        // 执行 SQL 语句\n        foreach ($dbh->query('SELECT * from news') as $row) {\n            print_r($row); //你可以用 echo($GLOBAL); 来看到这些值\n        }\n    // 现在运行完成，在此关闭连接    \n    $dbh = null;\n    }catch(PDOException $e){\n        die (\"Error!: \" . $e->getMessage() . \"<br/>\");\n    }\n?>\n")])])]),s("ul",[s("li",[n._v("PDO::query — 执行 SQL 语句，返回PDOStatement对象,可以理解为结果集。\n"),s("code",[n._v("参数: 要执行的SQL语句")]),n._v("。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);