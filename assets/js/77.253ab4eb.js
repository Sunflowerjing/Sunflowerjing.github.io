(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{283:function(v,_,t){"use strict";t.r(_);var i=t(0),e=Object(i.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[v._v("#")]),v._v(" 代理")]),v._v(" "),t("p",[t("code",[v._v("正向代理: clients -> proxy -> outside")])]),v._v(" "),t("p",[t("code",[v._v("反向代理: outside -> proxy -> servers")])]),v._v(" "),t("h2",{attrs:{id:"正向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正向代理"}},[v._v("#")]),v._v(" 正向代理")]),v._v(" "),t("ol",[t("li",[v._v("理解: 如果由于技术需要要去访问国外的某些网站, 此时你会发现位于国外的某网站我们通过浏览器是没有办法访问的，此时大家可能都会用一个操作FQ进行访问, "),t("code",[v._v("FQ的方式主要是找到一个可以访问国外网站的代理服务器")]),v._v(", 我们"),t("code",[v._v("将请求发送给代理服务器，代理服务器去访问国外的网站")]),v._v("，然后将访问到的数据传递给我们！")]),v._v(" "),t("li",[v._v("特点:\n"),t("ul",[t("li",[v._v("正向代理最大的特点是"),t("code",[v._v("客户端非常明确要访问的服务器地址")])]),v._v(" "),t("li",[t("code",[v._v("服务器只清楚请求来自哪个代理服务器")]),v._v(", 而不清楚来自哪个具体的客户端")]),v._v(" "),t("li",[t("code",[v._v("正向代理模式屏蔽或者隐藏了真实客户端信息。")])])])]),v._v(" "),t("li",[v._v("图解:\n"),t("img",{attrs:{src:"%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1.png",alt:"正向代理"}})])]),v._v(" "),t("h2",{attrs:{id:"反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[v._v("#")]),v._v(" 反向代理")]),v._v(" "),t("ol",[t("li",[v._v("理解: 举例某宝网站, 每天同时连接到网站的访问人数已经爆表,单个服务器远远不能满足人民日益增长的购买欲望了, 此时就出现了一个大家耳熟能详的名词: "),t("code",[v._v("分布式部署")]),v._v("; 也就是通过部署多台服务器来解决访问人数限制的问题;某宝网站中大部分功能也是"),t("code",[v._v("直接使用nginx进行反向代理实现的")]),v._v("。")]),v._v(" "),t("li",[v._v("特点:\n"),t("ul",[t("li",[v._v("请求的来源也就是"),t("code",[v._v("客户端是明确的")])]),v._v(" "),t("li",[v._v("但是请求"),t("code",[v._v("具体由哪台服务器处理的并不明确了")])]),v._v(" "),t("li",[v._v("nginx扮演的就是一个反向代理角色")])])]),v._v(" "),t("li",[v._v("图解:\n"),t("img",{attrs:{src:"%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8.png",alt:"反向代理"}})])]),v._v(" "),t("h2",{attrs:{id:"实际项目场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实际项目场景"}},[v._v("#")]),v._v(" 实际项目场景")]),v._v(" "),t("ol",[t("li",[v._v("通常情况下，我们在实际项目操作时，"),t("code",[v._v("正向代理和反向代理很有可能会存在在一个应用场景中")]),v._v(", 正向代理代理客户端的请求去访问目标服务器，目标服务器是一个反向单利服务器，反向代理了多台真实的业务处理服务器。具体的拓扑图如下:\n"),t("img",{attrs:{src:"%E6%AD%A3%E5%8F%8D%E4%BB%A3%E7%90%86.png",alt:"实际项目场景"}})])]),v._v(" "),t("h2",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[v._v("#")]),v._v(" Nginx")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("Nginx")]),v._v(" 是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器。")]),v._v(" "),t("li",[t("code",[v._v("Nginx")]),v._v(" 可以作为一个HTTP服务器进行网站的发布处理")]),v._v(" "),t("li",[t("code",[v._v("Nginx")]),v._v(" 可以作为反向代理进行负载均衡的实现。")]),v._v(" "),t("li",[t("code",[v._v("Nginx")]),v._v(" 特点\n"),t("ul",[t("li",[v._v("反向代理")]),v._v(" "),t("li",[v._v("负载均衡")]),v._v(" "),t("li",[v._v("nginx特点")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);