(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{251:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react基础2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react基础2"}},[t._v("#")]),t._v(" React基础2")]),t._v(" "),a("h2",{attrs:{id:"虚拟-dom-和-真实-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-和-真实-dom"}},[t._v("#")]),t._v(" 虚拟 DOM 和 真实 DOM")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("删除div/新增div/隐藏div => 虚拟 DOM => 一次映射 => 真实 DOM")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("虚拟 DOM")]),t._v(" "),a("ul",[a("li",[t._v("并不是用到浏览器中的 DMO")]),t._v(" "),a("li",[t._v("亮点: 批处理、diff")]),t._v(" "),a("li",[t._v("尽可能少的操作 DOM, 提高渲染效率")])])]),t._v(" "),a("li",[a("p",[t._v("虚拟 DOM 到底是什么?")]),t._v(" "),a("ul",[a("li",[t._v("说简单点，就是一个普通的 JavaScript 对象，包含了 "),a("code",[t._v("tag、props、children")]),t._v(" 三个属性。")]),t._v(" "),a("li",[t._v("案例")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("hello world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面的 HTML 转换为虚拟 DOM 如下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    chidren"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            props"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                className"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            chidren"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world!!!'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象就是我们常说的虚拟 DOM 了，因为 DOM 是树形结构，所以使用 JavaScript 对象就能很简单的表示")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("非 DOM 属性以及如何使用")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("dangerouslySetInnerHTML")]),t._v(":  是 React 为浏览器 DOM 提供 "),a("code",[t._v("innerHTML 的替换")]),t._v("方案\n"),a("ul",[a("li",[t._v("案例:"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div dangerouslySetInnerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("__html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<p>我是插入的 html</p>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])])]),t._v(" "),a("li",[t._v("ref\n"),a("ul",[a("li",[t._v("相当于 原生 HTML 中的 "),a("code",[t._v("id")])]),t._v(" "),a("li",[t._v("不能在"),a("code",[t._v("函数组件")]),t._v("上使用")]),t._v(" "),a("li",[t._v("可以在函数内部使用")]),t._v(" "),a("li",[t._v("可以访问真实 DOM, 操作 类组件")]),t._v(" "),a("li",[t._v("案例")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个 ref")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userRef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'userRef'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'操作真实 DOM'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("User ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即 user 必须是类组件")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("key\n"),a("ul",[a("li",[t._v("提高渲染性能, "),a("code",[t._v("唯一标志")]),t._v("。")]),t._v(" "),a("li",[t._v("识别哪些 DOM 改变, 渲染数组的时候用到。")]),t._v(" "),a("li",[t._v("尽量用 ID, 不推荐 index")])])])])]),t._v(" "),a("li",[a("p",[t._v("真实 DOM")]),t._v(" "),a("ul",[a("li",[t._v("真实 dom: 操作DOM成本高, 大量计算")]),t._v(" "),a("li",[t._v("真实的就是"),a("code",[t._v("控制台element")]),t._v("里看到的")]),t._v(" "),a("li",[t._v("案例")])])])]),t._v(" "),a("h2",{attrs:{id:"props-的介绍和应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props-的介绍和应用"}},[t._v("#")]),t._v(" Props 的介绍和应用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("什么是 props")]),t._v(" "),a("ul",[a("li",[t._v("组件 => 数据 => props, state")]),t._v(" "),a("li",[t._v("无论是 props 改变还是 state 的改变, 都会"),a("code",[t._v("引发 render 函数")]),t._v("的渲染")])])]),t._v(" "),a("li",[a("p",[t._v("如何使用")]),t._v(" "),a("ul",[a("li",[t._v("从外部传递给内部的一个值。")]),t._v(" "),a("li",[t._v("通过 JSX 属性, 传入设置的属性值。")]),t._v(" "),a("li",[t._v("props 对外的接口, 接收外部传入的数据。一般从父组件传递过来。")]),t._v(" "),a("li",[t._v("只读。(不可以被修改)")]),t._v(" "),a("li",[a("code",[t._v("reatc 数据流单向的")]),t._v(", 组件是可以复用的。所以不能修改 props, 修改后是不可以预测。若修改了 则违背组件的设计原则")]),t._v(" "),a("li",[t._v("若想要修改: "),a("code",[t._v("通过中间人 - state")]),t._v(", 把 props 的值赋值给 state.")])]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造器函数, 如果没有声明 默认添加。只会执行一次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6 的固定写法: 先创建父类实例的 this, 在用子类构造函数修改 this ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 是对外接口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state 是对内的状态管理")]),t._v("\n        newName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6 中 不会自动绑定 this, 需要手动绑定this")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleAdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this 绑定'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("组件的分类")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("函数组件")]),t._v(":\n"),a("ul",[a("li",[t._v("props")]),t._v(" "),a("li",[t._v("无状态组件")]),t._v(" "),a("li",[t._v("函数定义")]),t._v(" "),a("li",[t._v("接收 props, 是通过参数传进来的")])])]),t._v(" "),a("li",[a("code",[t._v("类组件")]),t._v(":\n"),a("ul",[a("li",[t._v("state 和 生命周期钩子")]),t._v(" "),a("li",[t._v("有状态组件")]),t._v(" "),a("li",[t._v("class定义")]),t._v(" "),a("li",[t._v("接收 props, 通过 this.props 就能获取到")])])]),t._v(" "),a("li",[t._v("二者的区别:\n"),a("ul",[a("li",[t._v("在没有 hook 之前, 区别是有无 state 和 生命周期函数。")]),t._v(" "),a("li",[t._v("函数组件 的性能高于 类组件。")])])]),t._v(" "),a("li",[t._v("有无状态组件是根据: 有无 state 来区分的。")]),t._v(" "),a("li",[t._v("有了 hooks 之后, 函数组件也可以用 state。")])])]),t._v(" "),a("li",[a("p",[t._v("设置默认值")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'18'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"事件监听-this-绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件监听-this-绑定"}},[t._v("#")]),t._v(" 事件监听 this 绑定")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("this")]),t._v(" "),a("ul",[a("li",[t._v("与执行上下文有关系")]),t._v(" "),a("li",[t._v("函数调用:\n"),a("ul",[a("li",[t._v("严格模式下, this => undefind")]),t._v(" "),a("li",[t._v("非严格模式下, this => window(全局)")])])]),t._v(" "),a("li",[t._v("作为方法调用\n"),a("ul",[a("li",[t._v("谁调用就指向谁")]),t._v(" "),a("li",[t._v("作为构造器函数调用, this 就会指向创建构造器函数的对象")]),t._v(" "),a("li",[t._v("通过 call、applay 修改 this, 即this执行 call、applay 的第一个参数。")])])]),t._v(" "),a("li",[t._v("react 中 class 创建的组件, 需要手动绑定 this。因为 ES6 class 的问题")])])]),t._v(" "),a("li",[a("p",[t._v("this 四种绑定方式")]),t._v(" "),a("ol",[a("li",[t._v("constructor 中, 通过 "),a("code",[t._v("bind 绑定")]),t._v("。")])]),t._v(" "),a("ul",[a("li",[t._v("推荐, 因为 this 只会 绑定一次"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleAdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("直接在 "),a("code",[t._v("JSX 元素进行绑定")])])]),t._v(" "),a("ul",[a("li",[t._v("每次渲染组件都会创建一个新的函数。造成额外的渲染，影响性能。不推荐"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 点击加一"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("使用箭头函数\n3) ES6 类字段: 箭头函数本身没有 this, 默认指向定义时的对象. 推荐, 也只会绑定一次\n"),a("ul",[a("li",[t._v("定义函数的时候操作"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleAdd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 点击加一"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("JSX 元素直接操作。不推荐"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAdd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 点击加一"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])])])])])]),t._v(" "),a("h2",{attrs:{id:"传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传值"}},[t._v("#")]),t._v(" 传值")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("父组件传值到子组件")]),t._v(" "),a("ul",[a("li",[t._v("通过 "),a("code",[t._v("props")])])])]),t._v(" "),a("li",[a("p",[t._v("子组件传值到父组件")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("props")]),t._v(": 接收任意类型值")]),t._v(" "),a("li",[t._v("子组件传递函数, 到父组件")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChildData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'接收子组件传递过来的值'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Footer getChildData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getChildData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handelAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getChildData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'传递给父组件的值'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"state-的介绍和应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-的介绍和应用"}},[t._v("#")]),t._v(" state 的介绍和应用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("什么是 state")]),t._v(" "),a("ul",[a("li",[t._v("props 对外的接口\n"),a("ul",[a("li",[t._v("可读性, 不能直接修改")])])]),t._v(" "),a("li",[t._v("state 内部的状态, 实现交互的时候使用。\n"),a("ul",[a("li",[t._v("控制元素的显示隐藏")]),t._v(" "),a("li",[t._v("可修改。setState")]),t._v(" "),a("li",[t._v("state.状态 = '修改值' 的方式修改是不对的")])])])])]),t._v(" "),a("li",[a("p",[t._v("如何使用")]),t._v(" "),a("ul",[a("li",[t._v("this.state={}")]),t._v(" "),a("li",[t._v("对象"),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    isShow"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isShow\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("函数"),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于当前 state 进行计算, 保证拿到的 state 一定是最新的")]),t._v("\n    count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("setState 异步更新\n"),a("ul",[a("li",[t._v("不会立马更新组件。批量延迟更新")]),t._v(" "),a("li",[t._v("React 控制的事件处理程序(onClick, onChange) 生命周期钩子函数, 不会同步更新 state, 异步")]),t._v(" "),a("li",[t._v("多个 setState 调用, 合并处理.性能优化, 高效")])])]),t._v(" "),a("li",[t._v("setState 同步更新\n"),a("ul",[a("li",[t._v("原生 js 绑定的事件, setTimeout")]),t._v(" "),a("li",[t._v("可以用函数的形式调用")])])])])]),t._v(" "),a("li",[a("p",[t._v("组件的 state 如何划分")]),t._v(" "),a("ul",[a("li",[t._v("state props 影响 UI 展示")]),t._v(" "),a("li",[t._v("原则\n"),a("ul",[a("li",[t._v("让组件尽可能少状态\n"),a("ul",[a("li",[t._v("UI 渲染, 数据展示, 没有复杂交互。使用 props 不使用 state")]),t._v(" "),a("li",[t._v("无 state, 使用 function 函数组件。 hook 中可以使用 state")]),t._v(" "),a("li",[t._v("无状态组件, UI 组件, 函数式组件, 纯函数, 无交互, 无数据逻辑层的展示")])])]),t._v(" "),a("li",[t._v("随着时间产生变化的数据, 有交互. 使用state\n"),a("ul",[a("li",[t._v("有 state, 使用 class")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("props 与 state 对比")]),t._v(" "),a("ul",[a("li",[t._v("相同点\n"),a("ul",[a("li",[t._v("组件内的数据")]),t._v(" "),a("li",[t._v("js 对象")]),t._v(" "),a("li",[t._v("保存信息")]),t._v(" "),a("li",[t._v("控制组件的形态 UI")])])]),t._v(" "),a("li",[t._v("不同点\n"),a("ul",[a("li",[t._v("props\n"),a("ul",[a("li",[t._v("props 父组件传入的, 定义外部组件的接口。")]),t._v(" "),a("li",[t._v("类组件通过 this.props 接收, 函数组件通过 props 接收")]),t._v(" "),a("li",[t._v("props 只读, 不能直接被修改")])])]),t._v(" "),a("li",[t._v("state\n"),a("ul",[a("li",[t._v("组件内部的状态, 作用范围当前组件.")]),t._v(" "),a("li",[t._v("私有变量, 使用 stare 来跟踪状态(控制元素的显示隐藏)")]),t._v(" "),a("li",[t._v("修改通过 setState")])])])])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);