(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{299:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"treeshaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treeshaking"}},[t._v("#")]),t._v(" TreeShaking")]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("别名：摇树 => 联想到树上的枯叶")])]),t._v(" "),a("li",[a("p",[t._v("功能：在代码不运行的情况下，就能分析出未引用代码。删除冗余代码从而优化代码体积\v。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("tree shaking")]),t._v("  这个概念最开始是从 Rollup 实现")]),t._v(" "),a("li",[t._v("随后 webpack2 开始支持了TreeShaking")])])]),t._v(" "),a("li",[a("p",[t._v("原理:")]),t._v(" "),a("ul",[a("li",[t._v("ES6 Module引入进行静态分析，所以在"),a("code",[t._v("编译")]),t._v("的时候正确判断到底加载了那些模块")]),t._v(" "),a("li",[t._v("静态分析程序流，"),a("code",[t._v("判断那些模块和变量未被使用或者引用，进而删除对应代码")])]),t._v(" "),a("li",[t._v("对应到代码, 则为: "),a("code",[t._v("webpack 负责对代码进行标记，把 import & export 标记为以下 3 类")]),t._v(" "),a("ul",[a("li",[t._v("所有 "),a("code",[t._v("import")]),t._v(" 标记为 "),a("code",[t._v("/* harmony import */")])]),t._v(" "),a("li",[t._v("被使用过的 "),a("code",[t._v("export")]),t._v(" 标记为 "),a("code",[t._v("/* harmony export ([type]) */")]),t._v("，其中 [type] 和 webpack 内部有关，可能是 binding, immutable 等等")]),t._v(" "),a("li",[t._v("没被使用过的 "),a("code",[t._v("import")]),t._v(" 标记为 "),a("code",[t._v("/* unused harmony export [FuncName] */")]),t._v("，其中 [FuncName] 为 export 的方法名称")]),t._v(" "),a("li",[t._v("是先找出 "),a("code",[t._v("已使用")]),t._v(" 的代码，自然剩下的则是 "),a("code",[t._v("未使用")]),t._v(" 的代码，最后通过注释的方式分别标注。")])])])])]),t._v(" "),a("li",[a("p",[t._v("使用前提:")]),t._v(" "),a("ul",[a("li",[t._v("交给 Webpack 的 JavaScript 代码必须是采用 ES6 模块化语法, 因为 ES6 模块化语法是静态的（导入导出语句中的路径必须是静态的字符串，而且不能放入其它代码块中）")]),t._v(" "),a("li",[t._v("所以 Webpack 可以简单的分析出哪些 export 的被 import 过了")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可行的 => ES5导出 export default App")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo.xxxx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar.xxx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("CommonJS 引入模块是动态引入的, 所以无法确定在实际运行前需要或者不需要某些模块。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不可行的 => ES6导出 module.exports = App")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDynamicModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    myDynamicModule "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    myDynamicModule "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("局限性:")]),t._v(" "),a("ul",[a("li",[t._v("class未使用的部分 "),a("code",[t._v("function")]),t._v(" 不会标注 "),a("code",[t._v("unused export")]),t._v("。 可得 "),a("code",[t._v("webpack")]),t._v(" 是对类整体进行标记的（标记为被使用），而不是分别针对内部方法。")]),t._v(" "),a("li",[t._v("工具类函数尽量以单独的形式输出，不要集中成一个对象或者类，避免打包对象和类未使用的部分。")])])]),t._v(" "),a("li",[a("p",[t._v("案例: 有一个文件 "),a("code",[t._v("util.js")]),t._v(" 里存放了很多工具函数和常量，在 "),a("code",[t._v("index.js")]),t._v(" 中会导入和使用 "),a("code",[t._v("util.js")])]),t._v(" "),a("ul",[a("li",[t._v("util.js")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("main.js")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("funcA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./util.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Tree Shaking 后的 util.js")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("funcA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("总结: 由于只用到了 util.js 中的 funcA，所以剩下的都被 Tree Shaking 当作无用代码给剔除了。")])])])]),t._v(" "),a("h2",{attrs:{id:"接入-tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接入-tree-shaking"}},[t._v("#")]),t._v(" 接入 Tree Shaking")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在 "),a("code",[t._v("development")]),t._v(" 模式下开启 "),a("code",[t._v("tree-shaking")])]),t._v(" "),a("ul",[a("li",[t._v("webpack.config.js 配置")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此模式不会打包压缩")]),t._v("\n    entry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/index.js'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    output"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        publicPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build.js'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    optimization"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        usedExports"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 找出未被使用的模块")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("运行 Webpack")]),t._v(" "),a("ul",[a("li",[t._v("执行打包命令 "),a("code",[t._v("npx webpack")])]),t._v(" "),a("li",[t._v("生成的"),a("code",[t._v("dist/build.js")]),t._v("的文件中有, 未用到的funB。")]),t._v(" "),a("li",[t._v("启动 Webpack 时带上 "),a("code",[t._v("--display-used-exports")]),t._v(" 参数, 方便追踪 Tree Shaking 的工作")])])]),t._v(" "),a("li",[a("p",[t._v("添加 webpack 的配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" UglifyJsPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'uglifyjs-webpack-plugin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UglifyJsPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("每个版本 Tree Shaking 的配置\n"),a("ul",[a("li",[t._v("webpack2: 可以简单的通过在启动 Webpack 时带上 "),a("code",[t._v("--optimize-minimize")]),t._v(" 参数, 接入 "),a("code",[t._v("UglifyJS")]),t._v("。需要配置babel")]),t._v(" "),a("li",[t._v("webpack3 需要配和 uglifyjsWebpackPlugin 使用")]),t._v(" "),a("li",[t._v("webpack4 把 mode 设置成 production。就可以进行默认的摇树行为了")])])])])]),t._v(" "),a("li",[a("p",[t._v("扩展")]),t._v(" "),a("ul",[a("li",[t._v("当项目使用了大量第三方库时，会发现 Tree Shaking 似乎不生效了，原因是大部分 Npm 中的代码都是采用的 CommonJS 语法， 这导致 Tree Shaking 无法正常工作而降级处理。")]),t._v(" "),a("li",[t._v("有些库发布到 Npm 上时会同时提供两份代码，一份采用 CommonJS 模块化语法，一份采用 ES6 模块化语法。并且在 "),a("code",[t._v("package.json")]),t._v("文件中分别指出这两份代码的入口。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// redux库为例, 发布到 Npm 上的目录结构如下")]),t._v("\nnode_modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("redux\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" es\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js # 采用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v(" 模块化语法\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" lib\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js # 采用 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES5")]),t._v(" 模块化语法\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n")])])]),a("ul",[a("li",[a("code",[t._v("package.json")]),t._v(" 文件中有两个字段：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lib/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指明采用 CommonJS 模块化的代码入口")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es/index.js"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指明采用 ES6 模块化的代码入口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("mainFields 字段")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("mainFields")]),t._v(" 用于配置采用哪个字段作为模块的入口描述")]),t._v(" "),a("li",[t._v("配置 Webpack 的文件")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    resolve"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 针对 Npm 中的第三方模块优先采用 module 中指向的 ES6 模块化语法的文件")]),t._v("\n        mainFields"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'browser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'main'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("以上配置的含义是优先使用 "),a("code",[t._v("module")]),t._v(" 作为入口，如果不存在 "),a("code",[t._v("module")]),t._v(" 就采用 "),a("code",[t._v("browser")]),t._v(" 或者 "),a("code",[t._v("main")]),t._v(" 作为入口。")])])])]),t._v(" "),a("h2",{attrs:{id:"common-js-和-es6-中模块引入的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-js-和-es6-中模块引入的区别"}},[t._v("#")]),t._v(" common.js 和 es6 中模块引入的区别")]),t._v(" "),a("ol",[a("li",[t._v("简介:\n"),a("ul",[a("li",[a("code",[t._v("CommonJS")]),t._v(" 是一种模块规范，最初被应用于 Nodejs，成为 Nodejs 的模块规范。")]),t._v(" "),a("li",[t._v("运行在浏览器端的 "),a("code",[t._v("JavaScript")]),t._v(" 由于也缺少类似的规范，在 ES6 出来之前，前端也实现了一套相同的模块规范 (例如: "),a("code",[t._v("AMD")]),t._v(")，用来对前端模块进行管理。")]),t._v(" "),a("li",[t._v("自 ES6 起，引入了一套新的"),a("code",[t._v("ES6 Module")]),t._v(" 规范，在语言标准的层面上实现了模块功能，而且实现得相当简单，有望成为浏览器和服务器通用的模块解决方案。")]),t._v(" "),a("li",[t._v("但目前浏览器对 "),a("code",[t._v("ES6 Module")]),t._v(" 兼容还不太好，我们平时在 Webpack 中使用的 "),a("code",[t._v("export")]),t._v(" 和 "),a("code",[t._v("import")]),t._v("，会经过 Babel 转换为 CommonJS 规范。")])])]),t._v(" "),a("li",[t._v("在使用上的差别主要有：\n"),a("ul",[a("li",[t._v("CommonJS 模块输出的是一个值的"),a("code",[t._v("拷贝")]),t._v("，ES6 模块输出的是"),a("code",[t._v("值的引用")]),t._v("。")]),t._v(" "),a("li",[t._v("CommonJS 模块是"),a("code",[t._v("运行时加载")]),t._v("，ES6 模块是"),a("code",[t._v("编译时输出接口")]),t._v("。")]),t._v(" "),a("li",[t._v("CommonJs 是"),a("code",[t._v("单个值导出")]),t._v("，ES6 Module可以"),a("code",[t._v("导出多个")])]),t._v(" "),a("li",[t._v("CommonJs 是"),a("code",[t._v("动态语法可以写在判断里")]),t._v("，ES6 Module "),a("code",[t._v("静态语法只能写在顶层")])]),t._v(" "),a("li",[t._v("CommonJs 的 "),a("code",[t._v("this 是当前模块")]),t._v("，ES6 Module的 "),a("code",[t._v("this 是 undefined")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);