(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{267:function(v,e,_){"use strict";_.r(e);var a=_(0),o=Object(a.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"微信小程序自动发布"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序自动发布"}},[v._v("#")]),v._v(" 微信小程序自动发布")]),v._v(" "),_("h2",{attrs:{id:"nodejs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nodejs"}},[v._v("#")]),v._v(" nodeJS")]),v._v(" "),_("ol",[_("li",[v._v("nodejs是一个基于 "),_("code",[v._v("Chrome V8 引擎")]),v._v("的 "),_("code",[v._v("JavaScript 运行环境")]),v._v("，异步IO，具有高的并发性能。无需借用一些web服务器软件（如apache、nginx, IIS）即可实现web服务的搭建。")]),v._v(" "),_("li",[v._v("nodeJS基础模块学习,当一个Nodejs程序运行时，会有许多存在内存中的全局变量。")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("path模块")]),v._v("提供用于处理文件路径和目录路径的实用工具")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("const path = require('path');\n")])])]),_("ul",[_("li",[_("code",[v._v("fs 模块")]),v._v("提供了文件系统进行交互, 所有文件系统操作都具有同步和异步的形式")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("const fs = require('fs');\n")])])]),_("ul",[_("li",[_("code",[v._v("process.argv")]),v._v(" 属性返回一个数组，其中包含当启动 Node.js 进程时传入的命令行参数。\n"),_("ul",[_("li",[v._v("第一个元素是 "),_("code",[v._v("process.execPath")]),v._v(",node的执行路径。如果需要访问 "),_("code",[v._v("argv[0]")]),v._v(" 的原始值，参阅 "),_("code",[v._v("process.argv0")]),v._v("。")]),v._v(" "),_("li",[v._v("第二个元素将是正在执行的 "),_("code",[v._v("JavaScript 文件的路径")]),v._v("。 即当前执行文件的路径")]),v._v(" "),_("li",[v._v("从第三个元素开始，是执行时带入的参数。")]),v._v(" "),_("li",[v._v("例如，假设 process-args.js 的脚本如下：")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("// 打印 process.argv。\nprocess.argv.forEach((val, index) => {\n    console.log(`${index}: ${val}`);\n});\n")])])]),_("ul",[_("li",[v._v("启动 Node.js 进程："),_("code",[v._v("$ node process-args.js one two=three four")])]),v._v(" "),_("li",[v._v("输出如下：")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("0: /usr/local/bin/node\n1: /Users/mjr/work/node/process-args.js\n2: one\n3: two=three\n4: four\n")])])])])]),v._v(" "),_("h2",{attrs:{id:"pm2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pm2"}},[v._v("#")]),v._v(" pm2")]),v._v(" "),_("ol",[_("li",[v._v("pm2是基于nodejs开发的"),_("code",[v._v("进程管理器")]),v._v("，适用于后台常驻脚本管理，同时对node网络应用有自建负载均衡功能。")])]),v._v(" "),_("h2",{attrs:{id:"commander-js"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commander-js"}},[v._v("#")]),v._v(" commander.js")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("commander.js一个工具包")]),v._v("，其作用是让node命令行程序的制作更加简单。\n"),_("ul",[_("li",[v._v("commander.js中命令行有两种可变性，一个叫做"),_("code",[v._v("option")]),v._v("，意为选项。一个叫做"),_("code",[v._v("command")]),v._v("，意为命令。")]),v._v(" "),_("li",[v._v("通过"),_("code",[v._v("option")]),v._v("设置的选项可以通过"),_("code",[v._v("program.chdir")]),v._v("或者"),_("code",[v._v("program.noTests")]),v._v("来访问。")]),v._v(" "),_("li",[v._v("通过"),_("code",[v._v("command")]),v._v("设置的命令通常"),_("code",[v._v("在action回调")]),v._v("中处理逻辑。")])])]),v._v(" "),_("li",[v._v("使用方式，正常的引入")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("const program = require('commander');\n")])])]),_("h3",{attrs:{id:"commander的-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commander的-api"}},[v._v("#")]),v._v(" commander的 API")]),v._v(" "),_("ol",[_("li",[_("p",[_("code",[v._v("version")]),v._v(": 用于设置命令程序的"),_("code",[v._v("版本号")])]),v._v(" "),_("ul",[_("li",[v._v("用法： "),_("code",[v._v(".version('x.y.z')")])])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("option")]),v._v(": 用于定义命令"),_("code",[v._v("选项")])]),v._v(" "),_("ul",[_("li",[v._v("用法： "),_("code",[v._v(".option('-n, --name <name>', 'your name', 'GK')")])]),v._v(" "),_("li",[v._v("第一个参数是选项定义，分为短定义和长定义。用|，,，连接。\n"),_("ul",[_("li",[v._v("参数可以用<>或者[]修饰，前者意为必须参数，后者意为可选参数。")])])]),v._v(" "),_("li",[v._v("第二个参数为选项描述")]),v._v(" "),_("li",[v._v("第三个参数为选项参数默认值，可选")]),v._v(" "),_("li",[v._v("示例: program.name值为123 不输入123则取默认值GK")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("command")]),v._v(": 添加"),_("code",[v._v("命令")]),v._v("名称")]),v._v(" "),_("ul",[_("li",[v._v("用法："),_("code",[v._v(".command('init <path>', 'description')")])]),v._v(" "),_("li",[v._v("command的用法稍微复杂，原则上他可以接受三个参数，第一个为命令定义，第二个命令描述，第三个为命令辅助修饰对象。")]),v._v(" "),_("li",[v._v("第一个参数中可以使用<>或者[]修饰命令参数,在命令后面传入的参数会被传入到 action 的回调函数以及 program.args 数组中。")]),v._v(" "),_("li",[v._v("第二个参数可选。\n"),_("ul",[_("li",[v._v("当没有第二个参数时，commander.js将返回Command对象，若有第二个参数，将返回原型对象。")]),v._v(" "),_("li",[v._v("当带有第二个参数，并且没有显示调用action(fn)时，则将会使用子命令模式。")]),v._v(" "),_("li",[v._v("所谓子命令模式即，./pm，./pm-install，./pm-search等。这些子命令跟主命令在不同的文件中。")])])]),v._v(" "),_("li",[v._v("第三个参数一般不用，它可以设置是否显示的使用子命令模式")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("description")]),v._v(": 用于设置命令的"),_("code",[v._v("描述")])]),v._v(" "),_("ul",[_("li",[v._v("用法："),_("code",[v._v(".description('command description')")])])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("action")]),v._v(": 用于设置命令"),_("code",[v._v("执行的相关回调")]),v._v("。")]),v._v(" "),_("ul",[_("li",[v._v("用法："),_("code",[v._v(".action(fn)")])]),v._v(" "),_("li",[_("code",[v._v("fn")]),v._v("可以接受命令的参数为函数形参，顺序与command()中定义的顺序一致。")])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("parse")]),v._v(": 此api一般是最后调用，用于解析"),_("code",[v._v("process.argv")]),v._v("。")]),v._v(" "),_("ul",[_("li",[v._v("用法："),_("code",[v._v("program.parse(process.argv)")])])])]),v._v(" "),_("li",[_("p",[_("code",[v._v("outputHelp")]),v._v(": 一般用于未录入参数时自动打印帮助信息。")]),v._v(" "),_("ul",[_("li",[v._v("用法：program.outputHelp()")])])])]),v._v(" "),_("h2",{attrs:{id:"简单的单位"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简单的单位"}},[v._v("#")]),v._v(" 简单的单位")]),v._v(" "),_("ol",[_("li",[v._v("K是KB的简称, 1kb(bit)")]),v._v(" "),_("li",[v._v("1024KB=1MB")]),v._v(" "),_("li",[v._v("1024MB=1GB")]),v._v(" "),_("li",[v._v("如果这个单位用在网络带宽上，则1K＝1/1024M")]),v._v(" "),_("li",[v._v("如果是用在磁盘容量上，则1K=1/1000M")])]),v._v(" "),_("h2",{attrs:{id:"egg"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#egg"}},[v._v("#")]),v._v(" egg")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("ctx.getFileStream()")]),v._v("  获取文件流\n"),_("code",[v._v("ctx.getFileStream().filename")]),v._v("  通过流获取文件名字")]),v._v(" "),_("li",[_("code",[v._v("ctx.app.config.WX_PKG_CACHE_PATH")]),v._v(" 访问配置对象")]),v._v(" "),_("li",[_("code",[v._v("process.env")]),v._v(" 返回用户运行环境对象")]),v._v(" "),_("li",[_("code",[v._v("import fse from 'fs-extra';")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("fse.emptyDirSync('mydir')")]),v._v(" 确保目标目录是空的，如果目录不是空的，删除目录里所有内容；如果目录不存在，创建目录。目录本身不删除。\n例如："),_("code",[v._v("fs.emptyDirSync('/tmp/some/dir')")]),v._v("  //确保最终存在一个空的目录")]),v._v(" "),_("li",[_("code",[v._v("fse.createWriteStream()")]),v._v(" 此方法有两个参数，第一个参数是读取文件的路径, 第二个参数为 options 选项，其中有七个参数。")])])]),v._v(" "),_("li",[_("code",[v._v("path.join()")]),v._v(" 方法使用平台特定的分隔符把全部给定的 path 片段连接到一起，并规范化生成的路径。\n例如: "),_("code",[v._v("path.join('foo', 'baz', 'bar');")]),v._v(" // 返回 'foo/baz/bar'")]),v._v(" "),_("li")])])}),[],!1,null,null,null);e.default=o.exports}}]);