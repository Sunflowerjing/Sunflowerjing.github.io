(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{292:function(v,_,i){"use strict";i.r(_);var s=i(0),l=Object(s.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"http-协议"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-协议"}},[v._v("#")]),v._v(" HTTP 协议")]),v._v(" "),i("h2",{attrs:{id:"http-协议详解"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-协议详解"}},[v._v("#")]),v._v(" HTTP 协议详解")]),v._v(" "),i("ol",[i("li",[v._v("请求模型\n"),i("ul",[i("li",[v._v("client 请求 <=> 响应 server")])])]),v._v(" "),i("li",[v._v("HTTP 超文本传输协议")]),v._v(" "),i("li",[v._v("7层应用: 应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。")]),v._v(" "),i("li",[v._v("4层应用: 应用层、传输层、网络层、网络接口层。\n"),i("ul",[i("li",[v._v("应用层: 为用户提供所需的各种服务。例如: "),i("code",[v._v("HTTP")]),v._v("、FTP、DNS、SMTP 等。")]),v._v(" "),i("li",[v._v("传输层\n"),i("ul",[i("li",[v._v("为应用层实体提供断到端的通信功能，保证数据包的顺序传送及数据的完整性。")]),v._v(" "),i("li",[v._v("该层定义了两个主要的协议: 传输控制协议(TCP) 和 用户数据协议(UDP)")])])]),v._v(" "),i("li",[v._v("网络层\n"),i("ul",[i("li",[v._v("主要解决主机到主机的通信问题。IP 协议是网际互联层最重要的协议。")])])]),v._v(" "),i("li",[v._v("网络接口层\n"),i("ul",[i("li",[v._v("负责监视数据在主机和网络之间的交换")])])])])]),v._v(" "),i("li",[v._v("HTTP 默认端口号为 "),i("code",[v._v("80")])]),v._v(" "),i("li",[v._v("HTTPS 默认端口号为 "),i("code",[v._v("443")])]),v._v(" "),i("li",[i("code",[v._v("TCP/IP")]),v._v(" 协议在栈中的位置\n"),i("ul",[i("li",[v._v("HTTP(TLS、SSL) => TCP => IP => 数据链路层")])])]),v._v(" "),i("li",[v._v("HTTP 的工作过程，分为以下4步骤\n(1) 首先客户端与服务器"),i("strong",[v._v("建立链接")]),v._v("。只要单击某个超级链接，HTTP的工作开始。=>  创建链接在 TCP 层完成\n(2) 创建链接后，"),i("strong",[v._v("客户端发送一个请求给服务器")]),v._v("，请求方式为: 统一资源标识符(URL)、协议版本号，后边是 MIME 信息包括请求修饰符、客户机信息和可能的内容。\n(3) 服务器接受到请求后，给予相应的"),i("strong",[v._v("响应信息")]),v._v("，其格式为一个状态行，包括信息的协议版本号、一个成功或错误代码，后边是 MIME 信息包括服务器信息、实体信息和可能的内容。\n(4) 客户端接收服务器所返回的信息通过浏览器"),i("strong",[v._v("显示在用户的显示屏")]),v._v("上，然后客户机与服务器断开链接。")])]),v._v(" "),i("h2",{attrs:{id:"请求和响应"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#请求和响应"}},[v._v("#")]),v._v(" 请求和响应")]),v._v(" "),i("ol",[i("li",[v._v("HTTP 请求组成: 请求行，消息报头、请求正文。\n"),i("ul",[i("li",[v._v("请求行: (1)请求方法 post (2)请求URL/api/user.html (3)HTTP协议及版本 http/1.1")]),v._v(" "),i("li",[v._v("消息报头: 键值对的形式")]),v._v(" "),i("li",[v._v("请求正文: get是没有请求数据。post才有请求数据")])])]),v._v(" "),i("li",[v._v("HTTP 响应组成: 状态行、消息报头、响应正文。\n"),i("ul",[i("li",[v._v("状态行: (1)报文协议及版本(HTTP/1.1) (2)状态码及状态描述 (200 OK)")]),v._v(" "),i("li",[v._v("消息报头: 键值对的形式")]),v._v(" "),i("li",[v._v("响应体:")])])]),v._v(" "),i("li",[v._v("请求行组成: 以一个方法符号开头，后面跟着请求的 URL 和 协议的版本")]),v._v(" "),i("li",[v._v("状态行组成: 服务器 HTTP 协议的版本，服务器发回的响应状态代码和状态代码的文描述。")])]),v._v(" "),i("h2",{attrs:{id:"http-状态码"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码"}},[v._v("#")]),v._v(" HTTP 状态码")]),v._v(" "),i("ol",[i("li",[v._v("1XX: 指示信息 - 表示请求已接收、继续处理")]),v._v(" "),i("li",[v._v("2XX: 成功 - 表示请求已被成功接收")]),v._v(" "),i("li",[v._v("3XX: 重定向 - 要完成请求必须进行更近一步的操作")]),v._v(" "),i("li",[v._v("4XX: 客户端错误 - 请求有语法错误或者请求无法实现")]),v._v(" "),i("li",[v._v("5XX: 服务器端错误 - 服务器未能实现合法请求")])]),v._v(" "),i("h2",{attrs:{id:"cookies-和-session"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cookies-和-session"}},[v._v("#")]),v._v(" cookies 和 session")]),v._v(" "),i("ol",[i("li",[v._v("cookies  是保存在客户端的小段文本, 随客户端点每一个请求发送该 URL 下的所有 cookies 到服务器端。\n"),i("ul",[i("li",[v._v("客户端 和 服务器一起维护")]),v._v(" "),i("li",[v._v("客户端将服务器设置的 Cookie 返回到服务器")]),v._v(" "),i("li",[v._v("set-cookie: 服务器向客户端设置 Cookie")])])]),v._v(" "),i("li",[v._v("session 则保存在服务器端，通过唯一的值 sessionID 来区别每一个用户。sessionID 随每个链接请求发送到服务器，服务器根据 sessionID 来识别客户端，在通过 session 的 key 获取 session 的值。\n"),i("ul",[i("li",[v._v("服务器维护")])])]),v._v(" "),i("li"),v._v(" "),i("li"),v._v(" "),i("li")])])}),[],!1,null,null,null);_.default=l.exports}}]);