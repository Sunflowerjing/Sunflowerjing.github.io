(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{306:function(v,_,i){"use strict";i.r(_);var e=i(0),l=Object(e.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"linux基础命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#linux基础命令"}},[v._v("#")]),v._v(" Linux基础命令")]),v._v(" "),i("ul",[i("li",[v._v("创建文件: "),i("code",[v._v("touch 文件名")]),v._v(" 或 "),i("code",[v._v("vi 文件名")])]),v._v(" "),i("li",[v._v("创建文件夹: "),i("code",[v._v("mkdir 文件夹名")])]),v._v(" "),i("li",[v._v("Linux 编辑文件, 显示行数: "),i("code",[v._v(":set number")]),v._v(" "),i("ul",[i("li",[v._v("可以在"),i("code",[v._v("系统配置文件")]),v._v("或"),i("code",[v._v("用户配置文件")]),v._v("进行总体配置")])])]),v._v(" "),i("li",[v._v("搜索历史记录: "),i("code",[v._v("history | grep ssh")])]),v._v(" "),i("li",[i("code",[v._v("PATH")]),v._v(": 用于保存用冒号分割的目录路径名，shell 将按PATH变量中给出的顺序搜索这些目录，找到的第一个与命令名称一致的可执行文件将被执行。即: 系统查找可执行文件的路径集合，"),i("code",[v._v(":")]),v._v(" 分隔。")]),v._v(" "),i("li",[i("code",[v._v("ps axu")]),v._v(": 查看进程情况的命令。\n"),i("ul",[i("li",[v._v("USER: 用户")]),v._v(" "),i("li",[v._v("PID:  进程号")]),v._v(" "),i("li",[v._v("%CPU: 进程占用的CPU百分比")]),v._v(" "),i("li",[v._v("%MEM: 占用内存的百分比")]),v._v(" "),i("li",[v._v("VSZ: 进程使用的虚拟內存量（KB）")]),v._v(" "),i("li",[v._v("RSS: 该进程占用的固定內存量（KB）（驻留中页的数量）")]),v._v(" "),i("li",[v._v("TTY: 终端号")]),v._v(" "),i("li",[v._v("STAT: 状态")]),v._v(" "),i("li",[v._v("START: 启动日期")]),v._v(" "),i("li",[v._v("TIME: 启动时间")]),v._v(" "),i("li",[v._v("COMMAND: 执行的命令行")])])]),v._v(" "),i("li",[i("code",[v._v("grep")]),v._v(": 查找。\n"),i("ul",[i("li",[v._v("例如: 检查 pm2 进程是否存在。"),i("code",[v._v("ps aux | grep pm2")])])])]),v._v(" "),i("li",[i("code",[v._v("export HOME=/home/build1.bds")]),v._v("  设置home地址")]),v._v(" "),i("li",[i("code",[v._v("losf -i:端口号")]),v._v(": 查看端口")]),v._v(" "),i("li",[i("code",[v._v("ps -ef")]),v._v(": 可以显示父进程的 ID。")]),v._v(" "),i("li",[i("code",[v._v("ps -ef | grep 详细讲解")]),v._v(":\n"),i("ul",[i("li",[i("code",[v._v("ps")]),v._v(": 命令，将某个进程显示出来")]),v._v(" "),i("li",[i("code",[v._v("grep")]),v._v(": 命令, 是查找")]),v._v(" "),i("li",[i("code",[v._v("|")]),v._v(": 中间的"),i("code",[v._v("|")]),v._v("是管道命令, 是指 "),i("code",[v._v("ps")]),v._v(" 命令与 "),i("code",[v._v("grep")]),v._v(" 同时进行")]),v._v(" "),i("li",[i("code",[v._v("-e")]),v._v(": 显示所有进程")]),v._v(" "),i("li",[i("code",[v._v("f")]),v._v(": 显示程序间的关系")])])])]),v._v(" "),i("h2",{attrs:{id:"vim"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#vim"}},[v._v("#")]),v._v(" vim")]),v._v(" "),i("ol",[i("li",[v._v("vim 启动的时, 会根据配置文件"),i("code",[v._v("(.vimrc)")]),v._v("来设置 Vim，因此我们可以通过此文件来定制适合自己的 Vim。")]),v._v(" "),i("li",[v._v("Vim 配置文件分为系统配置文件和用户配置文件:\n"),i("ul",[i("li",[v._v("系统配置: 文件位于 Vim 的安装目录（默认路径为 "),i("code",[v._v("/etc/.vimrc")]),v._v("）；")]),v._v(" "),i("li",[v._v("用户配置文件位于主目录 ~/.vimrc，即通过执行"),i("code",[v._v("vim ~/.vimrc")]),v._v("命令即可对此配置文件进行合理修改。通常情况下，Vim 用户配置文件需要自己手动创建。")])])]),v._v(" "),i("li",[v._v("注意: "),i("code",[v._v("Vim 用户配置文件比系统配置文件的优先级高")]),v._v("，换句话说，Vim 启动时，会优先读取 Vim 用户配置文件（位于主目录中的），所以我们只需要修改用户配置文件即可（不建议直接修改系统配置文件）。")]),v._v(" "),i("li",[v._v("Vim 提供的环境配置参数有很多, 在 Vim 中输入"),i("code",[v._v("：set all")]),v._v("指令来查询。")]),v._v(" "),i("li",[v._v("常用命令:\n"),i("ul",[i("li",[i("code",[v._v("set number")]),v._v(": 显示文件中的行数")]),v._v(" "),i("li",[i("code",[v._v("set cursorline")]),v._v(": 突出显示当前行")]),v._v(" "),i("li",[i("code",[v._v("set tabstop=4")]),v._v(": 设置 Tab 键宽度为4个空格")]),v._v(" "),i("li",[v._v("以上配置参数前面可以添加冒号（:），也可以省略，两种写法都可以。")]),v._v(" "),i("li",[v._v("通过以上方式，可以对用户配置文件（.vimrc）进行编辑，进而实现对 Vim 的永久自定义。")]),v._v(" "),i("li",[v._v("在 Vim 编辑模式中，通过 "),i("code",[v._v(":set nu")]),v._v(" 命令也可以让 "),i("code",[v._v("Vim 显示行号")]),v._v("，但只是临时有效，下次使用 Vim 编辑文件还是不显示行号。而本在编辑配置文件设置 Vim 的方式，对 Vim 的设置是永久的。")])])])])])}),[],!1,null,null,null);_.default=l.exports}}]);